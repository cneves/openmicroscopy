<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2008 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore, josh at glencoesoftware.com
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<beans>

  <bean id="configuration" class="ome.services.blitz.util.BlitzConfiguration"
    destroy-method="destroy">
    <description>
    Central configuration for the Blitz server runtime. This is done within
    a single object due to interdependencies which are complicated to express
    in Spring. All created instances are available via getters.
    </description>
    <constructor-arg ref="sessionManager"/>
    <constructor-arg ref="securitySystem"/>
    <constructor-arg ref="executor"/>
    <constructor-arg ref="ring"/>
  </bean>

  <bean id="ring" class="ome.services.blitz.fire.Ring">
    <constructor-arg ref="uuid"/>
    <constructor-arg ref="executor"/>
    <constructor-arg ref="redirector"/>
    <constructor-arg ref="sessionCache"/>
  </bean>

  <bean id="legacyRepository" class="ome.services.blitz.repo.LegacyRepositoryI" destroy-method="close">
      <constructor-arg index="0" ref="BlitzAdapter"/>
      <constructor-arg index="1" ref="Registry"/>
      <constructor-arg index="2" ref="executor"/>
      <constructor-arg index="3" ref="uuid"/>
      <constructor-arg index="4" value="${omero.data.dir}"/>
  </bean>
  <bean id="repositoryTakeoverRun" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="legacyRepository" />
    <property name="targetMethod" value="takeover" />
    <property name="concurrent"   value="false"/>
  </bean>
  <bean id="repositoryTakeoverTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <description>
    Runs periodically to give repositories a chance to take over for any dead
    instance. Calling takeover during regular initialization would cause startup
    to block. This is okay for separate repository (non-LegacyRepository) instances
    which run standalone, but not for this bean.
    </description>
    <property name="jobDetail" ref="repositoryTakeoverRun" />
    <property name="repeatInterval" value="60000" /><!-- millis -->
  </bean>

  <!-- Redirector configuration -->
  <alias name="${omero.cluster.redirector}" alias="redirector"/>
  
  <bean id="nullRedirector" class="ome.services.blitz.redirect.NullRedirector"/>
  
  <bean id="configRedirector" class="ome.services.blitz.redirect.ConfigRedirector">
    <constructor-arg ref="executor"/>
  </bean>

  <bean id="scaleRedirector" class="ome.services.blitz.redirect.ScaleRedirector">
    <constructor-arg ref="executor"/>
  </bean>

  <!-- Storm configuration -->

  <bean id="requestHeartBeatsRun" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="BlitzManager" />
    <property name="targetMethod" value="requestHeartBeats" />
  </bean>
  <bean id="requestHeartBeatsTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="cronExpression" value="0 0/3 * * * ?" />
    <property name="jobDetail" ref="requestHeartBeatsRun"/>
  </bean>
  
  <bean id="clusterCheckRun" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="ring" />
    <property name="targetMethod" value="checkCluster" />
  </bean>
  <bean id="clusterCheckTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="cronExpression" value="13 0/30 * * * ?" />
    <property name="jobDetail" ref="clusterCheckRun"/>
  </bean>

  <!-- Lookups -->
  <bean id="Ice.Communicator" factory-bean="configuration" factory-method="getCommunicator"/>
  <bean id="BlitzAdapter" factory-bean="configuration" factory-method="getBlitzAdapter"/>
  <bean id="BlitzManager" factory-bean="configuration" factory-method="getBlitzManager"/>
  <bean id="BlitzVerifier" factory-bean="configuration" factory-method="getBlitzVerifier"/>
  <bean id="TopicManager" factory-bean="configuration" factory-method="getTopicManager"/>
  <bean id="Registry" factory-bean="configuration" factory-method="getRegistry"/>

</beans>
